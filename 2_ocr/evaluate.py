import statistics
import sys
import os

# ------------------------------------------------------------------
# Ovaj fajl ne menjati, da bi automatsko ocenjivanje bilo moguce
if len(sys.argv) > 1:
    VALIDATION_DATASET_PATH = sys.argv[1]
else:
    VALIDATION_DATASET_PATH = '.'+os.path.sep+'dataset'+os.path.sep+'validation'+os.path.sep
# ------------------------------------------------------------------

labeled_samples = dict()

with open(VALIDATION_DATASET_PATH+'annotations.csv', encoding='utf-8') as file:
    data = file.read()
    lines = data.split('\n')
    for index, line in enumerate(lines):
        if index == 0:
            continue
        cols = line.split(',')
        if cols and cols[0] == '':
            continue
        cols[0] = cols[0].replace('\r', '').replace("\"", "")
        cols[1] = cols[1].replace('\r', '').replace("\"", "")
        labeled_samples["train"+str(cols[0])+'.png'] = cols[1]


# read results file generated by the main.py
results = dict()

with open('result.csv', encoding='utf-8') as file:
    data = file.read()
    lines = data.split('\n')
    for index, line in enumerate(lines):
        cols = line.split(',')
        if cols and cols[0] == '':
            continue
        cols[0] = cols[0].replace('\r', '')
        cols[1] = cols[1].replace('\r', '')
        results[cols[0]] = cols[1]


def jaccard_similarity(string_1, string_2):
    s1 = set(string_1.split())
    s2 = set(string_2.split())
    return len(s1.intersection(s2)) / len(s1.union(s2))

# evaluate how results file matches the labelled samples
similarities = []
for labeled_image_name in labeled_samples:
    similarity = jaccard_similarity(labeled_samples[labeled_image_name], results[labeled_image_name])
    similarities.append(similarity*100)

percentage = statistics.mean(similarities)

print(percentage)
